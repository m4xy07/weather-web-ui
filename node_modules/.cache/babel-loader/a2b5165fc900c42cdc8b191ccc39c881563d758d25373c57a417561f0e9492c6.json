{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, _ref) => {\n    let {\n      inputValue,\n      getOptionLabel\n    } = _ref;\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when pageup and pagedown keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(typeof optionLabel, \" (\").concat(optionLabel, \")\");\n        console.error(\"MUI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([\"MUI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\"));\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(_ref2 => {\n    let {\n      event,\n      index,\n      reason = 'auto'\n    } = _ref2;\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(\"[role=\\\"option\\\"].\".concat(unstable_classNamePrefix, \"-focused\"));\n    if (prev) {\n      prev.classList.remove(\"\".concat(unstable_classNamePrefix, \"-focused\"));\n      prev.classList.remove(\"\".concat(unstable_classNamePrefix, \"-focusVisible\"));\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n    if (!option) {\n      return;\n    }\n    option.classList.add(\"\".concat(unstable_classNamePrefix, \"-focused\"));\n    if (reason === 'keyboard') {\n      option.classList.add(\"\".concat(unstable_classNamePrefix, \"-focusVisible\"));\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(_ref3 => {\n    let {\n      event,\n      diff,\n      direction = 'next',\n      reason = 'auto'\n    } = _ref3;\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([\"A textarea element was provided to \".concat(componentName, \" where input was expected.\"), \"This is not a supported scenario but it may work under certain conditions.\", \"A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).\", \"Make sure to test keyboard navigation and add custom event handlers if necessary.\"].join('\\n'));\n        } else {\n          console.error([\"MUI: Unable to find the input element. It was resolved to \".concat(inputRef.current, \" while an HTMLInputElement was expected.\"), \"Instead, \".concat(componentName, \" expects an input element.\"), '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = function (event, option) {\n    let reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'selectOption';\n    let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([\"MUI: The `isOptionEqualToValue` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\"));\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"MUI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? \"\".concat(id, \"-listbox\") : null\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: () => ({\n      id: \"\".concat(id, \"-label\"),\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? \"\".concat(id, \"-listbox\") : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: _ref4 => {\n      let {\n        index\n      } = _ref4;\n      return _extends({\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1\n      }, !readOnly && {\n        onDelete: handleTagDelete(index)\n      });\n    },\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: \"\".concat(id, \"-listbox\"),\n      'aria-labelledby': \"\".concat(id, \"-label\"),\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: _ref5 => {\n      let {\n        index,\n        option\n      } = _ref5;\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_setRef","setRef","unstable_useEventCallback","useEventCallback","unstable_useControlled","useControlled","unstable_useId","useId","stripDiacritics","string","normalize","replace","createFilterOptions","config","arguments","length","undefined","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","defaultFilterOptions","pageSize","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","current","parentElement","contains","document","activeElement","useAutocomplete","props","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledProp","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","value","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","readOnly","selectOnFocus","valueProp","optionLabel","process","env","NODE_ENV","erroneousReturn","concat","console","error","JSON","String","ignoreFocus","useRef","firstFocus","inputRef","anchorEl","setAnchorEl","useState","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","controlled","default","name","setInputValueState","state","focused","setFocused","resetInputValue","useCallback","event","newValue","isOptionSelected","newInputValue","prevValue","useEffect","valueChange","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","missingValue","warn","join","focusTag","tagToFocus","focus","querySelector","validOptionIndex","index","direction","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","setHighlightedIndex","_ref2","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","nodeName","handleOpen","handleClose","handleValue","details","every","isTouch","selectNewValue","reasonProp","origin","Array","isArray","matches","push","splice","ctrlKey","metaKey","blur","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","indexBy","Map","reduce","acc","group","get","set","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","role","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart"],"sources":["/root/arduino-data/weather-web-ui/node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when pageup and pagedown keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}